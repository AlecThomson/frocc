# =============================================================================
#
# Default config template file
# ----------------------------
#
# This file serves as config file for sane defaults for the MeerKAT MIGHTEE 
# polarisation pipeline. The values in this file should not be edited. Instead
# every value can be overwritten in `default_config.txt` (after creating it
# via `meerkat-pol --createConfig --inputMS <path to input.ms>`.
# Don't forget to also copy the corrosponding sections like [input] when
# overwriting.
#
# =============================================================================

[input]
# List of frequency ranges in MHz to include (opportunistic) in the data cube
freqRanges = ["890-1700"]

# Channel width in [Hz] of the final data cube. 
outputChanBandwidth = 2.5e6

# The observation ID
observation = 0


# =============================================================================
# split
# https://casa.nrao.edu/docs/TaskRef/split-task.html
#
datacolumn = 'data'


# =============================================================================
# tclean
# https://casa.nrao.edu/docs/TaskRef/tclean-task.html

mask = ""
niter = 500
gain = 0.1
deconvolver = "clark"
threshold = 0.00001
imsize = 512
cell = 1.5
gridder = "wproject"
wprojplanes = -1
specmode = "mfs"
spw = ""
stokes = "IQUV"
weighting = "briggs"
robust = 0.0
pblimit = -1
restoration = True
restoringbeam = ""

# =============================================================================
# imsmooth
# https://casa.nrao.edu/docs/TaskRef/imsmooth-task.html

# smoothbeam = "15arcsec"
smoothbeam = "" # leave empty for no smoothed image cube


# =============================================================================
# Pipeline and program environment specific parameters
[env]
dirLogs = "logs/"
dirImages = "images/"
dirVis = "vis/"
dirPlots = "plots/"
dirRMSYplots = "rmsy-plots/"
dirRMSYdata = "rmsy-data/"
#dirList = ["logs/", "images/", "vis/", "plots/", "rmsy-plots/", "rmsy-data/"]
dirList = ["logs/", "images/", "vis/", "plots/"]

# string marker for channel files
markerChannel = ".chan"

# path to hdf5Converter
hdf5Converter = "/carta_share/hdf_convert/run_hdf_converter"
# directory to output the hdf5 file to.
dirHdf5Output = ""

# Also used for sbatch dependency, therfore list order matters!
runScripts = ["cube_split.py", "cube_tclean.py", "cube_buildcube.py", "cube_ior_flagging.py"]

#prefixSingularity = "srun --qos qos-interactive -N 1 --mem 20G --ntasks-per-node 1 --cpus-per-task 1 --time 1:00:00 --pty singularity exec /idia/software/containers/casa-6-2020-02-26.simg"
prefixSingularity = "singularity exec /idia/software/containers/casa-6-2020-02-26.simg"
#prefixSingularity = "srun --qos qos-interactive -N 1 --mem 20G --ntasks-per-node 1 --cpus-per-task 1 --time 1:00:00 --pty singularity exec /users/krishna/ceph/casa-stable-lennart.simg"
#prefixSingularity = "singularity exec /users/krishna/ceph/casa-stable-lennart.simg"
#prefixSingularity = "singularity exec /idia/software/containers/casa-6-2020-02-26.simg"

# The container and headnode have different python3 paths, hence the python3 $HOME...
# CAUTION ${HOME} does not get resolved by singularity. A string.replace() in setup_buildcube_wrapper.py is done to fix that.
commandSingularity = "python ${HOME}/.local/bin/setup_buildcube"
#env = {"PATH": "${PATH}:${HOME}/.local/bin/"}


# =============================================================================
# Values to help optimizing cluster load

tcleanMaxCpuCores = 30
tcleanMinCpuCores = 2
tcleanMaxMemory = 236  # in GB
tcleanMinMemory = 20
# maximum number of the cluster nodes to use
maxSimultaniousNodes = 40

